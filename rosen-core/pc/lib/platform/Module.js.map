{"version":3,"file":"Module.js","sourceRoot":"","sources":["../../core/platform/Module.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAC/C,OAAO,EAAE,kBAAkB,EAAE,MAAM,YAAY,CAAC;AAChD,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AAE7B,OAAO,EAAU,cAAc,EAAS,MAAM,YAAY,CAAC;AAE3D,eAAe;AACf,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,EAAE;IACxC,aAAa,EAAE,CAAC;CACnB;AAUD;IAGI,gBAAqB,IAAgB,EAAW,YAA0C;QAArE,SAAI,GAAJ,IAAI,CAAY;QAAW,iBAAY,GAAZ,YAAY,CAA8B;IAAG,CAAC;IAE9F;;;;OAIG;IACH,wBAAO,GAAP,UAAQ,KAA6C,EAAE,QAAyC;QAC5F,EAAE;IACN,CAAC;IAED;;OAEG;IACH,0BAAS,GAAT;QACI,EAAE;IACN,CAAC;IAED;;;;OAIG;IACH,kCAAiB,GAAjB,UAAkB,UAAsB,EAAE,QAAyC;QAC/E,EAAE;IACN,CAAC;IAED;;OAEG;IACH,uBAAM,GAAN;QACI,EAAE;IACN,CAAC;IAED;;;OAGG;IACH,yBAAQ,GAAR,UAAS,MAAuC;QAC5C,kBAAkB,CAAC,MAAa,CAAC,CAAC;IACtC,CAAC;IAED,sBAAI,yBAAK;aAAT;YACI,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzC,CAAC;;;OAAA;IAED,sBAAI,6BAAS;aAAb;YACI,OAAO,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAyB,CAAC;QACvD,CAAC;;;OAAA;IAED;;;OAGG;IACH,yBAAQ,GAAR,UACI,cAAsI;QAEtI,IAAI,OAAO,cAAc,KAAK,UAAU,EAAE;YACtC,IAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;YACjC,IAAM,SAAO,GAAG,cAA+D,CAAC;YAChF,IAAI,mBAAuC,CAAC;YAC5C,IAAM,QAAQ,GAAG,OAAO,CACpB,aAAa,EACb,UAAC,UAAU;gBACP,qEAAqE;gBACrE,SAAO,CAAC,UAAU,CAAC,CAAC;YACxB,CAAC,EACD,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa;gBAClC,CAAC,CAAC,UAAC,OAAO;oBACJ,kDAAkD;oBAClD,mBAAiB,GAAG,OAAO,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;gBAC7D,CAAC;gBACH,CAAC,CAAC,SAAS,CAClB,CAAC;YACF,IAAI,QAAQ,KAAK,aAAa,EAAE;gBAC5B,IAAM,WAAW,GAAG,YAAK,IAAI,CAAC,IAAI,sBAAY,mBAAiB,CAAC,CAAC,CAAC,WAAI,mBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,MAAG,CAAC,CAAC,CAAC,EAAE,CAAE,CAAC;gBAC5G,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC,CAAC;aACxE;SACJ;aAAM;YACH,IAAM,cAAY,GAAG,cAAwB,CAAC;YAC9C,IAAI,CAAC,QAAQ,CAAC,UAAC,KAAK,IAAK,OAAA,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,cAAY,CAAC,EAAlC,CAAkC,CAAC,CAAC;SAChE;IACL,CAAC;IACL,aAAC;AAAD,CAAC,AAtFD,IAsFC","sourcesContent":["import { RouteComponentProps } from \"react-router\";\r\nimport { enablePatches, produce } from \"immer\";\r\nimport { roDispatchFunction } from \"../actions\";\r\nimport { app } from \"../app\";\r\nimport { TickIntervalDecoratorFlag } from \"../module\";\r\nimport { Action, setStateAction, State } from \"../reducer\";\r\n\r\n// enableES5();\r\nif (process.env.NODE_ENV === \"development\") {\r\n    enablePatches();\r\n}\r\n\r\nexport interface ModuleLifecycleListener<RouteParam extends object = object> {\r\n    onEnter: (parms: RouteComponentProps[\"match\"][\"params\"], location: RouteComponentProps[\"location\"]) => void | Promise<void>;\r\n    onDestroy: () => void | Promise<void>;\r\n    onLocationMatched: (routeParameters: RouteParam, location: RouteComponentProps[\"location\"]) => void | Promise<void>;\r\n    onTick: (() => void | Promise<void>) & TickIntervalDecoratorFlag;\r\n    dispatch: (actionFunction: (...args: any[]) => Action<any>) => void | Promise<void>;\r\n}\r\n\r\nexport class Module<RootState extends State, ModuleName extends keyof RootState[\"app\"] & string, RouteParam extends object = object>\r\n    implements ModuleLifecycleListener<RouteParam>\r\n{\r\n    constructor(readonly name: ModuleName, readonly initialState: RootState[\"app\"][ModuleName]) {}\r\n\r\n    /**\r\n     * @description mount 之后调用\r\n     * @param parms\r\n     * @param location\r\n     */\r\n    onEnter(parms: RouteComponentProps[\"match\"][\"params\"], location: RouteComponentProps[\"location\"]) {\r\n        //\r\n    }\r\n\r\n    /**\r\n     * @description 销毁\r\n     */\r\n    onDestroy() {\r\n        //\r\n    }\r\n\r\n    /**\r\n     * @description 更新 路由 参数变更\r\n     * @param routeParam\r\n     * @param location\r\n     */\r\n    onLocationMatched(routeParam: RouteParam, location: RouteComponentProps[\"location\"]) {\r\n        //\r\n    }\r\n\r\n    /**\r\n     * @description 循环请求 可用 @interval 装饰器决定 周期\r\n     */\r\n    onTick(): void | Promise<void> {\r\n        //\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param action\r\n     */\r\n    dispatch(action: (...args: any[]) => Action<any>) {\r\n        roDispatchFunction(action as any);\r\n    }\r\n\r\n    get state(): Readonly<RootState[\"app\"][ModuleName]> {\r\n        return this.rootState.app[this.name];\r\n    }\r\n\r\n    get rootState(): Readonly<RootState> {\r\n        return app.store.getState() as Readonly<RootState>;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param stateOrUpdater 更新的内容 可以是对象 & function\r\n     */\r\n    setState<K extends keyof RootState[\"app\"][ModuleName]>(\r\n        stateOrUpdater: ((state: RootState[\"app\"][ModuleName]) => void) | Pick<RootState[\"app\"][ModuleName], K> | RootState[\"app\"][ModuleName]\r\n    ): void {\r\n        if (typeof stateOrUpdater === \"function\") {\r\n            const originalState = this.state;\r\n            const updater = stateOrUpdater as (state: RootState[\"app\"][ModuleName]) => void;\r\n            let patchDescriptions: string[] | undefined;\r\n            const newState = produce<Readonly<RootState[\"app\"][ModuleName]>, RootState[\"app\"][ModuleName]>(\r\n                originalState,\r\n                (draftState) => {\r\n                    // Wrap into a void function, in case updater() might return anything\r\n                    updater(draftState);\r\n                },\r\n                process.env.NODE_ENV === \"development\"\r\n                    ? (patches) => {\r\n                          // No need to read \"op\", in will only be \"replace\"\r\n                          patchDescriptions = patches.map((_) => _.path.join(\".\"));\r\n                      }\r\n                    : undefined\r\n            );\r\n            if (newState !== originalState) {\r\n                const description = `@@${this.name}/setState${patchDescriptions ? `[${patchDescriptions.join(\"/\")}]` : ``}`;\r\n                app.store.dispatch(setStateAction(this.name, newState, description));\r\n            }\r\n        } else {\r\n            const partialState = stateOrUpdater as object;\r\n            this.setState((state) => Object.assign(state, partialState));\r\n        }\r\n    }\r\n}\r\n"]}