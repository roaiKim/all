{"version":3,"file":"Route.js","sourceRoot":"","sources":["../../core/util/Route.tsx"],"names":[],"mappings":";;AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,QAAQ,EAAE,KAAK,IAAI,mBAAmB,EAAmC,MAAM,kBAAkB,CAAC;AAC3G,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAYhD;IAA2B,yBAA0B;IAArD;QAAA,qEAyBC;QAfG,iCAA2B,GAAG,UAAC,KAA+B;YACpD,IAAA,KAAsF,KAAI,CAAC,KAAK,EAA9F,SAAS,eAAA,EAAE,eAAe,qBAAA,EAAE,sBAAsB,4BAAA,EAAE,QAAQ,cAAA,EAAE,iBAAiB,uBAAe,CAAC;YACvG,IAAI,eAAe,EAAE;gBACjB,IAAM,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC/E,IAAM,SAAS,GAAG,KAAC,gBAAgB,eAAK,KAAK,EAAI,CAAC;gBAClD,OAAO,iBAAiB,CAAC,CAAC,CAAC,KAAC,aAAa,cAAE,SAAS,GAAiB,CAAC,CAAC,CAAC,SAAS,CAAC;aACrF;iBAAM;gBACH,OAAO,KAAC,QAAQ,IAAC,EAAE,EAAE,sBAAsB,GAAI,CAAC;aACnD;QACL,CAAC,CAAC;;IAMN,CAAC;IAJY,sBAAM,GAAf;QACI,IAAM,KAAmC,IAAI,CAAC,KAAK,EAA3C,SAAS,eAAA,EAAK,cAAc,cAA9B,aAAgC,CAAa,CAAC;QACpD,OAAO,KAAC,mBAAmB,eAAK,cAAc,IAAE,MAAM,EAAE,IAAI,CAAC,2BAA2B,IAAI,CAAC;IACjG,CAAC;IAvBM,kBAAY,GAAyH;QACxI,KAAK,EAAE,IAAI;QACX,SAAS,EAAE,IAAI;QACf,iBAAiB,EAAE,IAAI;QACvB,eAAe,EAAE,IAAI;QACrB,sBAAsB,EAAE,GAAG;QAC3B,QAAQ,EAAE,KAAK;KAClB,CAAC;IAiBN,YAAC;CAAA,AAzBD,CAA2B,KAAK,CAAC,aAAa,GAyB7C;SAzBY,KAAK;AA2BlB,SAAS,mBAAmB,CAAe,gBAAwC;IAC/E;QAAqB,2BAAsB;QAApC;;QAIP,CAAC;QAHY,wBAAM,GAAf;YACI,OAAO,KAAC,gBAAgB,eAAK,IAAI,CAAC,KAAK,EAAI,CAAC;QAChD,CAAC;QACL,cAAC;IAAD,CAAC,AAJM,CAAc,KAAK,CAAC,aAAa,GAItC;AACN,CAAC","sourcesContent":["import React from \"react\";\r\nimport { Redirect, Route as ReactRouterDOMRoute, RouteComponentProps, RouteProps } from \"react-router-dom\";\r\nimport { ErrorBoundary } from \"./ErrorBoundary\";\r\nimport { app } from \"../app\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n    // All below are optional\r\n    withErrorBoundary: boolean;\r\n    accessCondition: boolean;\r\n    unauthorizedRedirectTo: string;\r\n    notFound: boolean;\r\n}\r\n\r\nexport class Route extends React.PureComponent<Props> {\r\n    static defaultProps: Pick<Props, \"exact\" | \"sensitive\" | \"withErrorBoundary\" | \"accessCondition\" | \"unauthorizedRedirectTo\" | \"notFound\"> = {\r\n        exact: true,\r\n        sensitive: true,\r\n        withErrorBoundary: true,\r\n        accessCondition: true,\r\n        unauthorizedRedirectTo: \"/\",\r\n        notFound: false,\r\n    };\r\n\r\n    renderRegularRouteComponent = (props: RouteComponentProps<any>): React.ReactElement => {\r\n        const { component, accessCondition, unauthorizedRedirectTo, notFound, withErrorBoundary } = this.props;\r\n        if (accessCondition) {\r\n            const WrappedComponent = notFound ? withNotFoundWarning(component) : component;\r\n            const routeNode = <WrappedComponent {...props} />;\r\n            return withErrorBoundary ? <ErrorBoundary>{routeNode}</ErrorBoundary> : routeNode;\r\n        } else {\r\n            return <Redirect to={unauthorizedRedirectTo} />;\r\n        }\r\n    };\r\n\r\n    override render() {\r\n        const { component, ...restRouteProps } = this.props;\r\n        return <ReactRouterDOMRoute {...restRouteProps} render={this.renderRegularRouteComponent} />;\r\n    }\r\n}\r\n\r\nfunction withNotFoundWarning<T extends {}>(WrappedComponent: React.ComponentType<T>): React.ComponentType<T> {\r\n    return class extends React.PureComponent<T> {\r\n        override render() {\r\n            return <WrappedComponent {...this.props} />;\r\n        }\r\n    };\r\n}\r\n"]}