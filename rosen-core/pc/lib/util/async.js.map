{"version":3,"file":"async.js","sourceRoot":"","sources":["../../core/util/async.tsx"],"names":[],"mappings":";;AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,YAAY,EAAE,MAAM,cAAc,CAAC;AAC5C,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AAC7B,OAAO,EAAE,aAAa,EAAE,MAAM,YAAY,CAAC;AAoB3C,MAAM,UAAU,KAAK,CACjB,OAAyB,EACzB,SAAY,EACZ,EAA0F;QAA1F,qBAAwF,EAAE,KAAA,EAAxF,gBAAgB,sBAAA,EAAE,yBAAiC,EAAjC,iBAAiB,mBAAG,aAAa,KAAA,EAAE,cAAc,oBAAA;IAErE,OAAO;QAAoC,yCAA8C;QAGrF,+BAAY,KAAS;YAArB,YACI,kBAAM,KAAK,CAAC,SAEf;YALO,aAAO,GAAG,IAAI,CAAC;YAkBvB,mBAAa,GAAG;;;;;;4BAER,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;4BAC/B,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC,CAAC;4BAErC,qBAAM,OAAO,EAAE,EAAA;;4BAA/B,aAAa,GAAG,SAAe;4BACrC,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,SAAS,CAAQ,EAAE,CAAC,CAAC;;;;4BAE9D,YAAY,CAAC,GAAC,EAAE,0BAA0B,CAAC,CAAC;4BAC5C,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,GAAC,EAAE,CAAC,CAAC;;;4BAE5B,IAAI,IAAI,CAAC,OAAO,EAAE;gCACd,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;6BAC9B;4BACD,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC,CAAC;;;;;iBAEnE,CAAC;YA9BE,KAAI,CAAC,KAAK,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;;QAClD,CAAC;QAEQ,iDAAiB,GAA1B;YACI,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC;QAED,6CAAa,GAAb;YACI,UAAU;YACV,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;gBACtB,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC,CAAC;YAC/D,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,CAAC;QAoBQ,sCAAM,GAAf;YACU,IAAA,KAAuB,IAAI,CAAC,KAAK,EAA/B,SAAS,eAAA,EAAE,KAAK,WAAe,CAAC;YACxC,IAAM,QAAQ,GAAG,KAAK,KAAK,IAAI,CAAC;YAEhC,IAAI,QAAQ,EAAE;gBACV,OAAO,cAAc,CAAC,CAAC,CAAC,KAAC,cAAc,IAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,aAAa,GAAI,CAAC,CAAC,CAAC,IAAI,CAAC;aAC/F;YAED,OAAO,SAAS,CAAC,CAAC,CAAC,KAAC,SAAS,eAAK,IAAI,CAAC,KAAK,EAAI,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAC,gBAAgB,KAAG,CAAC,CAAC,CAAC,IAAI,CAAC;QACtG,CAAC;QACL,4BAAC;IAAD,CAAC,AA/CM,CAAoC,KAAK,CAAC,aAAa,EA+CtD,CAAC;AACb,CAAC","sourcesContent":["import React from \"react\";\r\nimport { captureError } from \"./error-util\";\r\nimport { app } from \"../app\";\r\nimport { loadingAction } from \"../reducer\";\r\n\r\nexport type ReactComponentKeyOf<T> = { [P in keyof T]: T[P] extends React.ComponentType<any> ? P : never }[keyof T];\r\n\r\nexport interface AsyncOptions {\r\n    loadingIdentifier?: string;\r\n    LoadingComponent?: React.ComponentType;\r\n    ErrorComponent?: React.ComponentType<AsyncErrorComponentProps>;\r\n}\r\n\r\nexport interface AsyncErrorComponentProps {\r\n    error: unknown;\r\n    reload: () => Promise<void>;\r\n}\r\n\r\ninterface WrapperComponentState {\r\n    Component: React.ComponentType<any> | null;\r\n    error: unknown | null;\r\n}\r\n\r\nexport function async<T, K extends ReactComponentKeyOf<T>>(\r\n    resolve: () => Promise<T>,\r\n    component: K,\r\n    { LoadingComponent, loadingIdentifier = \"pageloading\", ErrorComponent }: AsyncOptions = {}\r\n): T[K] {\r\n    return class AsyncWrapperComponent extends React.PureComponent<{}, WrapperComponentState> {\r\n        private timeOut = null;\r\n\r\n        constructor(props: {}) {\r\n            super(props);\r\n            this.state = { Component: null, error: null };\r\n        }\r\n\r\n        override componentDidMount() {\r\n            this.loadComponent();\r\n        }\r\n\r\n        moduleLoading() {\r\n            // 延迟200ms\r\n            this.timeOut = setTimeout(() => {\r\n                app.store.dispatch(loadingAction(true, loadingIdentifier));\r\n            }, 200);\r\n        }\r\n\r\n        loadComponent = async () => {\r\n            try {\r\n                this.setState({ error: null });\r\n                app.store.dispatch(loadingAction(true, loadingIdentifier));\r\n                // this.moduleLoading();\r\n                const moduleExports = await resolve();\r\n                this.setState({ Component: moduleExports[component] as any });\r\n            } catch (e) {\r\n                captureError(e, \"@@framework/async-import\");\r\n                this.setState({ error: e });\r\n            } finally {\r\n                if (this.timeOut) {\r\n                    clearTimeout(this.timeOut);\r\n                }\r\n                app.store.dispatch(loadingAction(false, loadingIdentifier));\r\n            }\r\n        };\r\n\r\n        override render() {\r\n            const { Component, error } = this.state;\r\n            const hasError = error !== null;\r\n\r\n            if (hasError) {\r\n                return ErrorComponent ? <ErrorComponent error={error} reload={this.loadComponent} /> : null;\r\n            }\r\n\r\n            return Component ? <Component {...this.props} /> : LoadingComponent ? <LoadingComponent /> : null;\r\n        }\r\n    } as any;\r\n}\r\n"]}