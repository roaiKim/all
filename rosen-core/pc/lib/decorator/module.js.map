{"version":3,"file":"module.js","sourceRoot":"","sources":["../../core/decorator/module.ts"],"names":[],"mappings":"AAAA,yBAAyB;;AAEzB,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AAC7B,OAAO,EAAE,0BAA0B,EAAE,MAAM,cAAc,CAAC;AAC1D,OAAO,EAAE,aAAa,EAAE,MAAM,YAAY,CAAC;AAE3C,OAAO,EAAE,4BAA4B,EAAE,MAAM,GAAG,CAAC;AAEjD;;;;GAIG;AACH,MAAM,UAAU,OAAO,CAAC,UAAqB;IAA7C,iBASC;IATuB,2BAAA,EAAA,qBAAqB;IACzC,OAAO,4BAA4B,CAAC,UAAO,OAAO;;;;;oBAE1C,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;oBACpD,qBAAM,OAAO,EAAE,EAAA;;oBAAf,SAAe,CAAC;;;oBAEhB,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;;;;;SAE5D,CAAC,CAAC;AACP,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,QAAQ,CAAC,MAAc;IACnC,OAAO,UAAC,MAAM,EAAE,WAAW,EAAE,UAAU;QACnC,UAAU,CAAC,KAAM,CAAC,YAAY,GAAG,MAAM,CAAC;QACxC,OAAO,UAAU,CAAC;IACtB,CAAC,CAAC;AACN,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,KAAK;IACjB,IAAI,QAAQ,GAAkB,IAAI,CAAC;IACnC,OAAO,4BAA4B,CAAC,UAAgB,OAAO;;;;;6BACnD,QAAQ,EAAR,wBAAQ;;;;wBAIJ,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;wBACtB,qBAAM,OAAO,EAAE,EAAA;;wBAAf,SAAe,CAAC;;;wBAEhB,QAAQ,GAAG,IAAI,CAAC;;;;;;KAG3B,CAAC,CAAC;AACP,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,6BAA6B,CAAC,mBAA+B,EAAE,UAAsB;IAAvD,oCAAA,EAAA,uBAA+B;IAAE,2BAAA,EAAA,cAAsB;IACjG,OAAO,4BAA4B,CAAC,UAAgB,OAAO;;;;;;wBACnD,SAAS,GAAG,CAAC,CAAC;;;6BAEX,IAAI;wBACP,IAAI,SAAS,GAAG,UAAU,EAAE;4BACxB,wBAAM;yBACT;;;;wBAEG,qBAAM,OAAO,EAAE,EAAA;;wBAAf,SAAe,CAAC;wBAChB,wBAAM;;;6BAEF,CAAA,GAAC,YAAY,0BAA0B,CAAA,EAAvC,wBAAuC;wBACvC,SAAS,EAAE,CAAC;wBACZ,qBAAM,IAAI,OAAO,CAAC,UAAC,OAAO;gCACtB,KAAK,GAAG,UAAU,CAAC,OAAO,EAAE,mBAAmB,GAAG,IAAI,CAAC,CAAC;4BAC5D,CAAC,CAAC,EAAA;;wBAFF,SAEE,CAAC;;4BAEH,MAAM,GAAC,CAAC;;;;;;;KAIvB,CAAC,CAAC;AACP,CAAC","sourcesContent":["// 这里的装饰器只能用于 module 中的方法\r\n\r\nimport { app } from \"../app\";\r\nimport { NetworkConnectionException } from \"../Exception\";\r\nimport { loadingAction } from \"../reducer\";\r\n\r\nimport { createActionHandlerDecorator } from \".\";\r\n\r\n/**\r\n * @description loading\r\n * @param identifier loading的标识 用于区分不同的loading, 取值时 showLoading 的第二个参数\r\n * @returns\r\n */\r\nexport function loading(identifier = \"global\") {\r\n    return createActionHandlerDecorator(async (handler) => {\r\n        try {\r\n            app.store.dispatch(loadingAction(true, identifier));\r\n            await handler();\r\n        } finally {\r\n            app.store.dispatch(loadingAction(false, identifier));\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * @description module中 onTick 函数的执行周期\r\n * @param second 间隔的秒数\r\n * @returns\r\n */\r\nexport function interval(second: number) {\r\n    return (target, propertyKey, descriptor) => {\r\n        descriptor.value!.tickInterval = second;\r\n        return descriptor;\r\n    };\r\n}\r\n\r\n/**\r\n * @description 互斥锁\r\n * @returns null\r\n */\r\nexport function mutex() {\r\n    let lockTime: number | null = null;\r\n    return createActionHandlerDecorator(async function (handler) {\r\n        if (lockTime) {\r\n            //\r\n        } else {\r\n            try {\r\n                lockTime = Date.now();\r\n                await handler();\r\n            } finally {\r\n                lockTime = null;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * @description 遇到出错时 自动重试\r\n * @param retryIntervalSecond 重试的间隔数\r\n * @param timesBlock 重试的次数\r\n * @returns null\r\n */\r\nexport function retryOnNetworkConnectionError(retryIntervalSecond: number = 3, timesBlock: number = 5) {\r\n    return createActionHandlerDecorator(async function (handler) {\r\n        let retryTime = 0;\r\n        let timer;\r\n        while (true) {\r\n            if (retryTime > timesBlock) {\r\n                break;\r\n            }\r\n            try {\r\n                await handler();\r\n                break;\r\n            } catch (e) {\r\n                if (e instanceof NetworkConnectionException) {\r\n                    retryTime++;\r\n                    await new Promise((resolve) => {\r\n                        timer = setTimeout(resolve, retryIntervalSecond * 1000);\r\n                    });\r\n                } else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n"]}