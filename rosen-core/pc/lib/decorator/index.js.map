{"version":3,"file":"index.js","sourceRoot":"","sources":["../../core/decorator/index.ts"],"names":[],"mappings":";AAUA,MAAM,UAAU,4BAA4B,CAAkC,WAA0C;IACpH,OAAO,UAAC,MAAM,EAAE,WAAW,EAAE,UAAU;QACnC,IAAM,EAAE,GAAG,UAAU,CAAC,KAAM,CAAC;QAC7B,UAAU,CAAC,KAAK,GAAG;YAAU,cAAc;iBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;gBAAd,yBAAc;;YACvC,IAAM,OAAO,GAA8B,EAAE,CAAC,IAAI,OAAP,EAAE,iBAAM,IAAI,UAAK,IAAI,UAAQ,CAAC;YACzE,OAAO,CAAC,UAAU,GAAI,UAAU,CAAC,KAAa,CAAC,UAAU,CAAC;YAC1D,OAAO,WAAW,CAAC,OAAO,EAAE,IAAW,CAAC,CAAC;QAC7C,CAAC,CAAC;QACF,OAAO,UAAU,CAAC;IACtB,CAAC,CAAC;AACN,CAAC","sourcesContent":["import { ActionHandler } from \"../module\";\r\nimport { Module } from \"../platform/Module\";\r\nimport { State } from \"../reducer\";\r\n\r\ntype HandlerDecorator = (target: object, propertyKey: string, descriptor: TypedPropertyDescriptor<ActionHandler>) => TypedPropertyDescriptor<ActionHandler>;\r\n\r\ntype ActionHandlerWithMetaData = ActionHandler & { actionName: string; maskedParams: string };\r\n\r\ntype HandlerInterceptor<RootState extends State = State> = (handler: ActionHandlerWithMetaData, thisModule: Module<RootState, any>) => unknown;\r\n\r\nexport function createActionHandlerDecorator<RootState extends State = State>(interceptor: HandlerInterceptor<RootState>): HandlerDecorator {\r\n    return (target, propertyKey, descriptor) => {\r\n        const fn = descriptor.value!;\r\n        descriptor.value = function (...args: any[]) {\r\n            const boundFn: ActionHandlerWithMetaData = fn.bind(this, ...args) as any;\r\n            boundFn.actionName = (descriptor.value as any).actionName;\r\n            return interceptor(boundFn, this as any);\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\n"]}