{"version":3,"file":"actions.js","sourceRoot":"","sources":["../core/actions.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,IAAI,EAAE,MAAM,wBAAwB,CAAC;AAC9C,OAAO,EAAE,GAAG,EAAE,MAAM,OAAO,CAAC;AAE5B,MAAM,CAAC,IAAM,aAAa,GAAG,UAAC,UAAwC,EAAE,KAA6B;IACjG,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;QAChC,eAAe;QACf,IAAM,GAAG,GAAW,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAI,UAAU,CAAE,CAAC;QAC/E,IAAI,KAAK,EAAE;YACP,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,KAAK,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;SACrG;aAAM;YACH,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SACjC;KACJ;SAAM;QACH,IAAM,UAAU,GAAG,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC;QACvD,IAAM,OAAK,GAAwB,UAAU,CAAC;QAC9C,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,OAAK,CAAC,CAAC,CAAC;KAC/C;AACL,CAAC,CAAC;AAEF,MAAM,UAAU,kBAAkB,CAAC,MAAuC;IACtE,IAAI,OAAO,MAAM,KAAK,UAAU;QAAE,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;IACnF,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;AACjC,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,MAAmB;IAChD,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC/B,CAAC","sourcesContent":["import { Action } from \"redux\";\r\nimport { push } from \"connected-react-router\";\r\nimport { app } from \"./app\";\r\n\r\nexport const roPushHistory = (urlOrState: Record<string, any> | string, state?: object | \"keep-state\") => {\r\n    if (typeof urlOrState === \"string\") {\r\n        // 只能相对于根路径进行跳转\r\n        const url: string = urlOrState.startsWith(\"/\") ? urlOrState : `/${urlOrState}`;\r\n        if (state) {\r\n            app.store.dispatch(push(url, state === \"keep-state\" ? app.browserHistory.location.state : state));\r\n        } else {\r\n            app.store.dispatch(push(url));\r\n        }\r\n    } else {\r\n        const currentURL = location.pathname + location.search;\r\n        const state: Record<string, any> = urlOrState;\r\n        app.store.dispatch(push(currentURL, state));\r\n    }\r\n};\r\n\r\nexport function roDispatchFunction(action: (...args: any[]) => Action<any>) {\r\n    if (typeof action !== \"function\") throw new Error(\"this.dispatch 的参数必须为 Function\");\r\n    app.store.dispatch(action());\r\n}\r\n\r\nexport function roDispatchAction(action: Action<any>) {\r\n    app.store.dispatch(action);\r\n}\r\n"]}