import type { EchartsTreeState } from "./index";

const GridConfig: EchartsTreeState[] = [
    {
        sort: 0,
        level: 2,
        parentPath: ["grid"],
        id: "id",
        name: "id",
        defaultValue: "",
        shortDescroption: "组件 ID。默认不指定。指定则可用于在 option 或者 API 中引用组件。",
        options: [],
        propTypes: ["string"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 1,
        level: 2,
        parentPath: ["grid"],
        id: "show",
        name: "show",
        defaultValue: "",
        shortDescroption: "是否显示直角坐标系网格。",
        options: [],
        propTypes: ["boolean"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 2,
        level: 2,
        parentPath: ["grid"],
        id: "zlevel",
        name: "zlevel",
        defaultValue: "",
        shortDescroption: "所有图形的 zlevel 值。",
        description: [
            "所有图形的 zlevel 值。",
            "zlevel用于 Canvas 分层，不同zlevel值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的zlevel。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。",
            "zlevel 大的 Canvas 会放在 zlevel 小的 Canvas 的上面。",
        ],
        options: [],
        propTypes: ["number"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 3,
        level: 2,
        parentPath: ["grid"],
        id: "z",
        name: "z",
        defaultValue: "2",
        shortDescroption: "组件的所有图形的z值。控制图形的前后顺序。z值小的图形会被z值大的图形覆盖。",
        description: [
            "组件的所有图形的z值。控制图形的前后顺序。z值小的图形会被z值大的图形覆盖。",
            "z相比zlevel优先级更低，而且不会创建新的 Canvas。",
        ],
        options: [],
        propTypes: ["number"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 4,
        level: 2,
        parentPath: ["grid"],
        id: "left",
        name: "left",
        defaultValue: "10%",
        shortDescroption: "undefined组件离容器左侧的距离。",
        description: [
            "undefined组件离容器左侧的距离。",
            "left 的值可以是像 20 这样的具体像素值，可以是像 '20%' 这样相对于容器宽度的百分比，也可以是 'left', 'center', 'right'。",
            "如果 left 的值为 'left', 'center', 'right'，组件会根据相应的位置自动对齐。",
        ],
        options: [],
        propTypes: ["string", "number"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 5,
        level: 2,
        parentPath: ["grid"],
        id: "top",
        name: "top",
        defaultValue: "60",
        shortDescroption: "undefined组件离容器上侧的距离。",
        description: [
            "undefined组件离容器上侧的距离。",
            "top 的值可以是像 20 这样的具体像素值，可以是像 '20%' 这样相对于容器高度的百分比，也可以是 'top', 'middle', 'bottom'。",
            "如果 top 的值为 'top', 'middle', 'bottom'，组件会根据相应的位置自动对齐。",
        ],
        options: [],
        propTypes: ["string", "number"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 6,
        level: 2,
        parentPath: ["grid"],
        id: "right",
        name: "right",
        defaultValue: "10%",
        shortDescroption: "undefined组件离容器右侧的距离。",
        description: ["undefined组件离容器右侧的距离。", "right 的值可以是像 20 这样的具体像素值，可以是像 '20%' 这样相对于容器宽度的百分比。"],
        options: [],
        propTypes: ["string", "number"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 7,
        level: 2,
        parentPath: ["grid"],
        id: "bottom",
        name: "bottom",
        defaultValue: "60",
        shortDescroption: "undefined组件离容器下侧的距离。",
        description: ["undefined组件离容器下侧的距离。", "bottom 的值可以是像 20 这样的具体像素值，可以是像 '20%' 这样相对于容器高度的百分比。"],
        options: [],
        propTypes: ["string", "number"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 8,
        level: 2,
        parentPath: ["grid"],
        id: "width",
        name: "width",
        defaultValue: "auto",
        shortDescroption: "直角坐标系（grid）组件的宽度。默认自适应。",
        description: [
            "直角坐标系（grid）组件的宽度。默认自适应。",
            "width 的值可以是像 20 这样的具体像素值，可以是像 '20%' 这样相对于容器宽度的百分比。",
        ],
        options: [],
        propTypes: ["string", "number"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 9,
        level: 2,
        parentPath: ["grid"],
        id: "height",
        name: "height",
        defaultValue: "auto",
        shortDescroption: "直角坐标系（grid）组件的高度。默认自适应。",
        description: [
            "直角坐标系（grid）组件的高度。默认自适应。",
            "height 的值可以是像 20 这样的具体像素值，可以是像 '20%' 这样相对于容器高度的百分比。",
        ],
        options: [],
        propTypes: ["string", "number"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 10,
        level: 2,
        parentPath: ["grid"],
        id: "containLabel",
        name: "containLabel",
        defaultValue: "",
        shortDescroption: "grid 区域是否包含坐标轴的刻度标签。",
        description: ["从 v6.0.0 开始不推荐使用（deprecated）。参考 grid.outerBoundsMode。", "grid 区域是否包含坐标轴的刻度标签。"],
        options: [
            {
                key: "false",
                des: "containLabel为false的时候：\ngrid.leftgrid.rightgrid.topgrid.bottomgrid.widthgrid.height决定的是由坐标轴形成的矩形的尺寸和位置。\n这比较适用于多个grid进行对齐的场景，因为往往多个grid对齐的时候，是依据坐标轴来对齐的。",
            },
            {
                key: "grid.left",
                des: "grid.leftgrid.rightgrid.topgrid.bottomgrid.widthgrid.height决定的是由坐标轴形成的矩形的尺寸和位置。",
            },
            {
                key: "grid",
                des: "这比较适用于多个grid进行对齐的场景，因为往往多个grid对齐的时候，是依据坐标轴来对齐的。",
            },
            {
                key: "true",
                des: "containLabel为true的时候：\ngrid.leftgrid.rightgrid.topgrid.bottomgrid.widthgrid.height决定的是包括了坐标轴标签在内的所有内容所形成的矩形的位置。\n这常用于『防止标签溢出』的场景，标签溢出指的是，标签长度动态变化时，可能会溢出容器或者覆盖其他组件。",
            },
            {
                key: "grid.left",
                des: "grid.leftgrid.rightgrid.topgrid.bottomgrid.widthgrid.height决定的是包括了坐标轴标签在内的所有内容所形成的矩形的位置。",
            },
            {
                key: "",
                des: "这常用于『防止标签溢出』的场景，标签溢出指的是，标签长度动态变化时，可能会溢出容器或者覆盖其他组件。",
            },
        ],
        propTypes: ["boolean"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 11,
        level: 2,
        parentPath: ["grid"],
        id: "outerBoundsMode",
        name: "outerBoundsMode",
        defaultValue: "auto",
        shortDescroption: "外边界（outer bounds）是一个用于限制轴标签和轴名称溢出的矩形区域。outerBoundsMode 用于定义如何确定该“外边界”的策略。",
        description: [
            "从 v6.0.0 开始支持",
            "外边界（outer bounds）是一个用于限制轴标签和轴名称溢出的矩形区域。outerBoundsMode 用于定义如何确定该“外边界”的策略。",
            "在大多数情况下，无需显式指定 grid.outerBoundsMode、grid.outerBounds、grid.outerBoundsContain 和 grid.containLabel，因为默认配置已经能够有效防止轴标签和轴名称溢出画布。",
            "直角坐标系组件（grid）的布局策略如下：",
            "outerBoundsMode 的可选值有：",
            "外边界（outer bounds）已涵盖 grid.containLabel 的功能，因此 grid.containLabel 被不再推荐使用（deprecated）。 grid.containLabel: true 等价于 grid: {outerBoundsMode: 'same', outerBoundsContain: 'axisLabel'}。效果上可能会有细微差别，但通常难以察觉。你可以使用以下代码来强制保持原有效果，不过一般并无此必要。",
            "示例: outerBounds 示例.",
        ],
        options: [
            {
                key: "",
                des: "首先，根据grid.left/right/top/bottom/width/height所定义的矩形区域布置轴线。这可以满足多个grid对齐轴线的需求。",
            },
            {
                key: "",
                des: "然后，如果轴标签或轴名称超出了外边界（outerbounds），则会收缩该矩形区域以避免溢出。其中，grid.outerBoundsContain可决定轴标签和轴名称是否受外边界的限制。",
            },
        ],
        propTypes: ["string"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 12,
        level: 2,
        parentPath: ["grid"],
        id: "outerBounds",
        name: "outerBounds",
        defaultValue: "auto",
        shortDescroption: "详见 grid.outerBoundsMode.",
        description: ["从 v6.0.0 开始支持", "详见 grid.outerBoundsMode.", "也参见 outerBounds 示例."],
        options: [],
        propTypes: ["object"],
        descendant: [
            {
                sort: 0,
                level: 3,
                parentPath: ["grid", "outerBounds"],
                id: "left",
                name: "left",
                defaultValue: "",
                shortDescroption: "外边界（outerBounds）离容器左侧的距离。",
                description: [
                    "从 v6.0.0 开始支持",
                    "外边界（outerBounds）离容器左侧的距离。",
                    "left 的值可以是像 20 这样的具体像素值，可以是像 '20%' 这样相对于容器宽度的百分比，也可以是 'left', 'center', 'right'。",
                    "如果 left 的值为 'left', 'center', 'right'，组件会根据相应的位置自动对齐。",
                ],
                options: [],
                propTypes: ["string", "number"],
                descendant: [],
                isLeaf: true,
            },
            {
                sort: 1,
                level: 3,
                parentPath: ["grid", "outerBounds"],
                id: "top",
                name: "top",
                defaultValue: "",
                shortDescroption: "外边界（outerBounds）离容器上侧的距离。",
                description: [
                    "从 v6.0.0 开始支持",
                    "外边界（outerBounds）离容器上侧的距离。",
                    "top 的值可以是像 20 这样的具体像素值，可以是像 '20%' 这样相对于容器高度的百分比，也可以是 'top', 'middle', 'bottom'。",
                    "如果 top 的值为 'top', 'middle', 'bottom'，组件会根据相应的位置自动对齐。",
                ],
                options: [],
                propTypes: ["string", "number"],
                descendant: [],
                isLeaf: true,
            },
            {
                sort: 2,
                level: 3,
                parentPath: ["grid", "outerBounds"],
                id: "right",
                name: "right",
                defaultValue: "",
                shortDescroption: "外边界（outerBounds）离容器右侧的距离。",
                description: [
                    "从 v6.0.0 开始支持",
                    "外边界（outerBounds）离容器右侧的距离。",
                    "right 的值可以是像 20 这样的具体像素值，可以是像 '20%' 这样相对于容器宽度的百分比。",
                    "默认自适应。",
                ],
                options: [],
                propTypes: ["string", "number"],
                descendant: [],
                isLeaf: true,
            },
            {
                sort: 3,
                level: 3,
                parentPath: ["grid", "outerBounds"],
                id: "bottom",
                name: "bottom",
                defaultValue: "",
                shortDescroption: "外边界（outerBounds）离容器下侧的距离。",
                description: [
                    "从 v6.0.0 开始支持",
                    "外边界（outerBounds）离容器下侧的距离。",
                    "bottom 的值可以是像 20 这样的具体像素值，可以是像 '20%' 这样相对于容器高度的百分比。",
                    "默认自适应。",
                ],
                options: [],
                propTypes: ["string", "number"],
                descendant: [],
                isLeaf: true,
            },
            {
                sort: 4,
                level: 3,
                parentPath: ["grid", "outerBounds"],
                id: "width",
                name: "width",
                defaultValue: "auto",
                shortDescroption: "外边界（outerBounds）的宽度。默认自适应。",
                description: [
                    "从 v6.0.0 开始支持",
                    "外边界（outerBounds）的宽度。默认自适应。",
                    "width 的值可以是像 20 这样的具体像素值，可以是像 '20%' 这样相对于容器宽度的百分比。",
                ],
                options: [],
                propTypes: ["string", "number"],
                descendant: [],
                isLeaf: true,
            },
            {
                sort: 5,
                level: 3,
                parentPath: ["grid", "outerBounds"],
                id: "height",
                name: "height",
                defaultValue: "auto",
                shortDescroption: "外边界（outerBounds）的高度。默认自适应。",
                description: [
                    "从 v6.0.0 开始支持",
                    "外边界（outerBounds）的高度。默认自适应。",
                    "height 的值可以是像 20 这样的具体像素值，可以是像 '20%' 这样相对于容器高度的百分比。",
                ],
                options: [],
                propTypes: ["string", "number"],
                descendant: [],
                isLeaf: true,
            },
        ],
        isLeaf: false,
    },
    {
        sort: 13,
        level: 2,
        parentPath: ["grid"],
        id: "outerBoundsContain",
        name: "outerBoundsContain",
        defaultValue: "auto",
        shortDescroption: "可选值：",
        description: ["从 v6.0.0 开始支持", "可选值：", "更多信息参见 grid.outerBoundsMode.", "也参见 outerBounds 示例."],
        options: [
            {
                key: "auto",
                des: "auto/null/undefined（默认）：\n若设置了containLabel:true，行为等同于outerBoundsContain:axisLabel。\n否则，行为等同于outerBoundsContain:all。",
            },
            {
                key: "containLabel:true",
                des: "若设置了containLabel:true，行为等同于outerBoundsContain:axisLabel。",
            },
            {
                key: "outerBoundsContain:all",
                des: "否则，行为等同于outerBoundsContain:all。",
            },
            {
                key: "all",
                des: "all：外边界（outerbounds）会限制直角坐标系（grid）由x轴线和y轴线决定的矩形区域、轴标签（axislabel）和轴名称（axisname）。",
            },
            {
                key: "axisLabel",
                des: "axisLabel：外边界（outerbounds）会限制直角坐标系（grid）由x轴线和y轴线决定矩形区域和轴标签（axislabel）；不会限制轴名称（axisname）。",
            },
        ],
        propTypes: ["boolean"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 14,
        level: 2,
        parentPath: ["grid"],
        id: "backgroundColor",
        name: "backgroundColor",
        defaultValue: "transparent",
        shortDescroption: "直角坐标系（grid）背景色，默认透明。",
        description: [
            "直角坐标系（grid）背景色，默认透明。",
            "颜色可以使用 RGB 表示，比如 'rgb(128, 128, 128)' ，如果想要加上 alpha 通道，可以使用 RGBA，比如 'rgba(128, 128, 128, 0.5)'，也可以使用十六进制格式，比如 '#ccc'",
            "注意：此配置项生效的前提是，设置了 show: true。",
        ],
        options: [],
        propTypes: ["color"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 15,
        level: 2,
        parentPath: ["grid"],
        id: "borderColor",
        name: "borderColor",
        defaultValue: "#ccc",
        shortDescroption: "直角坐标系（grid）的边框颜色。支持的颜色格式同 backgroundColor。",
        description: ["直角坐标系（grid）的边框颜色。支持的颜色格式同 backgroundColor。", "注意：此配置项生效的前提是，设置了 show: true。"],
        options: [],
        propTypes: ["color"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 16,
        level: 2,
        parentPath: ["grid"],
        id: "borderWidth",
        name: "borderWidth",
        defaultValue: "1",
        shortDescroption: "直角坐标系（grid）的边框线宽。",
        description: ["直角坐标系（grid）的边框线宽。", "注意：此配置项生效的前提是，设置了 show: true。"],
        options: [],
        propTypes: ["number"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 17,
        level: 2,
        parentPath: ["grid"],
        id: "shadowBlur",
        name: "shadowBlur",
        defaultValue: "",
        shortDescroption: "图形阴影的模糊大小。该属性配合 shadowColor,shadowOffsetX, shadowOffsetY 一起设置图形的阴影效果。",
        description: [
            "图形阴影的模糊大小。该属性配合 shadowColor,shadowOffsetX, shadowOffsetY 一起设置图形的阴影效果。",
            "示例：",
            "注意：此配置项生效的前提是，设置了 show: true 以及值不为 transparent 的背景色 backgroundColor。",
        ],
        options: [],
        propTypes: ["number"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 18,
        level: 2,
        parentPath: ["grid"],
        id: "shadowColor",
        name: "shadowColor",
        defaultValue: "",
        shortDescroption: "阴影颜色。支持的格式同color。",
        description: ["阴影颜色。支持的格式同color。", "注意：此配置项生效的前提是，设置了 show: true。"],
        options: [],
        propTypes: ["color"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 19,
        level: 2,
        parentPath: ["grid"],
        id: "shadowOffsetX",
        name: "shadowOffsetX",
        defaultValue: "",
        shortDescroption: "阴影水平方向上的偏移距离。",
        description: ["阴影水平方向上的偏移距离。", "注意：此配置项生效的前提是，设置了 show: true。"],
        options: [],
        propTypes: ["number"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 20,
        level: 2,
        parentPath: ["grid"],
        id: "shadowOffsetY",
        name: "shadowOffsetY",
        defaultValue: "",
        shortDescroption: "阴影垂直方向上的偏移距离。",
        description: ["阴影垂直方向上的偏移距离。", "注意：此配置项生效的前提是，设置了 show: true。"],
        options: [],
        propTypes: ["number"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 21,
        level: 2,
        parentPath: ["grid"],
        id: "tooltip",
        name: "tooltip",
        defaultValue: "",
        shortDescroption: "本坐标系特定的 tooltip 设定。",
        description: [
            "本坐标系特定的 tooltip 设定。",
            "提示框组件的通用介绍：",
            "提示框组件可以设置在多种地方：",
            "可以设置在全局，即 tooltip",
            "可以设置在坐标系中，即 grid.tooltip、polar.tooltip、single.tooltip",
            "可以设置在系列中，即 series.tooltip",
            "可以设置在系列的每个数据项中，即 series.data.tooltip",
        ],
        options: [
            {
                key: "",
                des: "可以设置在全局，即tooltip",
            },
            {
                key: "",
                des: "可以设置在坐标系中，即grid.tooltip、polar.tooltip、single.tooltip",
            },
            {
                key: "",
                des: "可以设置在系列中，即series.tooltip",
            },
            {
                key: "",
                des: "可以设置在系列的每个数据项中，即series.data.tooltip",
            },
        ],
        propTypes: ["object"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 22,
        level: 2,
        parentPath: ["grid"],
        id: "coordinateSystem",
        name: "coordinateSystem",
        defaultValue: "none",
        shortDescroption: "指定另一个坐标系组件，本 grid 布局在那个坐标系中。",
        description: [
            "从 v6.0.0 开始支持",
            "指定另一个坐标系组件，本 grid 布局在那个坐标系中。",
            "可选值：",
            "null、undefined 或者 'none'",
            "不布局在任何坐标系中。自己独立完成布局。",
            "'calendar'",
            "布局在一个 日历坐标系 中。当一个 ECharts 实例中存在多个日历坐标系时，须通过 calendarIndex 或 calendarId 指定所使用的日历坐标系。",
            "'matrix'",
            "布局在一个 矩阵坐标系中。当一个 ECharts 实例中存在多个矩阵坐标系时，须通过 matrixIndex 或 matrixId 指定所使用的矩阵坐标系。",
            "参见示例 矩阵坐标系中的微型折线图。",
            "下表总结了“某系列或组件是否支持布局在某坐标系上”：",
            "最左列列出了要布局的系列和组件（坐标系本身也是组件），最上行列出了所基于的坐标系。",
            "也参见 grid.coordinateSystemUsage。",
        ],
        options: [
            {
                key: "null",
                des: "null、undefined或者none",
            },
        ],
        propTypes: ["string"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 23,
        level: 2,
        parentPath: ["grid"],
        id: "coordinateSystemUsage",
        name: "coordinateSystemUsage",
        defaultValue: "box",
        shortDescroption: "如何在指定的 坐标系 上布局本 grid。",
        description: [
            "从 v6.0.0 开始支持",
            "如何在指定的 坐标系 上布局本 grid。",
            "在大多数情况下，无需显式指定 coordinateSystemUsage，除非默认行为不符合预期。",
            "可选值：",
            "'data'：（不适用于 grid）",
            "此系列的每个数据项（例如，每个 series.data[i]）将独立地在指定的坐标系进行布局。 注：当前没有任何“非系列组件”支持 coordinateSystemUsage: 'data'。",
            "'box'：",
            "此系列或组件作为一个整体，在指定的坐标系中进行布局——即根据坐标系计算整体的包围盒或基础锚点。",
            "另参考：grid.coordinateSystem。",
        ],
        options: [
            {
                key: "data",
                des: "data：（不适用于grid）",
            },
            {
                key: "box",
                des: "box：",
            },
            {
                key: "",
                des: "例如，grid组件可以布局在matrix坐标系或calendar坐标系中，这时其布局矩形是由grid.coords在坐标系中计算出来的。参见示例：矩阵中的微型折线图。",
            },
            {
                key: "",
                des: "又如，饼图系列或和弦图系列可以布局在geo坐标系或cartesian2d坐标系中，这时其中心点是由series-pie.coords或series-pie.center在坐标系中计算出来的。参见示例：地理坐标系中的饼图。",
            },
        ],
        propTypes: ["string"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 24,
        level: 2,
        parentPath: ["grid"],
        id: "coord",
        name: "coord",
        defaultValue: "",
        shortDescroption: "当 coordinateSystemUsage 为 'box' 时, coord 被输入给坐标系，计算得到布局位置（布局盒或者中心点）。",
        description: [
            "从 v6.0.0 开始支持",
            "当 coordinateSystemUsage 为 'box' 时, coord 被输入给坐标系，计算得到布局位置（布局盒或者中心点）。",
            "例子：矩阵中的微型折线图, 矩阵中的关系图.",
            "注：当 coordinateSystemUsage 为 'data' 时，输入给坐标系的是 series.data[i] 而非此 coord。",
            "coord 的具体格式定义，取决于每个坐标系，并且，和 chart.convertToPixel 的第二个参数相同。",
        ],
        options: [],
        propTypes: ["array", "string"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 25,
        level: 2,
        parentPath: ["grid"],
        id: "calendarIndex",
        name: "calendarIndex",
        defaultValue: "",
        shortDescroption: "布局时所基于的 日历坐标系 的 index。当一个 ECharts 实例中存在多个日历坐标系时，用其指定所使用的坐标系。",
        description: [
            "从 v6.0.0 开始支持",
            "布局时所基于的 日历坐标系 的 index。当一个 ECharts 实例中存在多个日历坐标系时，用其指定所使用的坐标系。",
        ],
        options: [],
        propTypes: ["number"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 26,
        level: 2,
        parentPath: ["grid"],
        id: "calendarId",
        name: "calendarId",
        defaultValue: "undefined",
        shortDescroption: "布局时所基于的 日历坐标系 的 id。当一个 ECharts 实例中存在多个日历坐标系时，用其指定所使用的坐标系。",
        description: ["从 v6.0.0 开始支持", "布局时所基于的 日历坐标系 的 id。当一个 ECharts 实例中存在多个日历坐标系时，用其指定所使用的坐标系。"],
        options: [],
        propTypes: ["number"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 27,
        level: 2,
        parentPath: ["grid"],
        id: "matrixIndex",
        name: "matrixIndex",
        defaultValue: "",
        shortDescroption: "布局时所基于的 矩阵坐标系 的 index。当一个 ECharts 实例中存在多个矩阵坐标系时，用其指定所使用的坐标系。",
        description: [
            "从 v6.0.0 开始支持",
            "布局时所基于的 矩阵坐标系 的 index。当一个 ECharts 实例中存在多个矩阵坐标系时，用其指定所使用的坐标系。",
        ],
        options: [],
        propTypes: ["number"],
        descendant: [],
        isLeaf: true,
    },
    {
        sort: 28,
        level: 2,
        parentPath: ["grid"],
        id: "matrixId",
        name: "matrixId",
        defaultValue: "undefined",
        shortDescroption: "布局时所基于的 矩阵坐标系 的 id。当一个 ECharts 实例中存在多个矩阵坐标系时，用其指定所使用的坐标系。",
        description: ["从 v6.0.0 开始支持", "布局时所基于的 矩阵坐标系 的 id。当一个 ECharts 实例中存在多个矩阵坐标系时，用其指定所使用的坐标系。"],
        options: [],
        propTypes: ["number"],
        descendant: [],
        isLeaf: true,
    },
];

export default GridConfig;
